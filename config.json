[
    {
        "name": "Classificador AutoML",
        "description": "Utiliza o auto-sklearn para obter um ou mais modelos classificadores já otimizados.",
        "path": "/samples/automl-classifier",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Regressor AutoML",
        "description": "Utiliza o auto-sklearn para obter um ou mais modelos regressores já otimizados.",
        "path": "/samples/automl-regressor",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Regressão Logística",
        "description": "Treina um modelo de Regressão Logística para classificação usando scikit-learn.",
        "path": "/samples/logistic-regression",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Regressão Linear",
        "description": "Treina um modelo de Regressão Linear para regressão usando scikit-learn.",
        "path": "/samples/linear-regression",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Classificador SVM",
        "description": "Treina um modelo Support Vector Classification usando scikit-learn.",
        "path": "/samples/svc",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Regressor SVM",
        "description": "Treina um modelo Support Vector Regression usando scikit-learn.",
        "path": "/samples/svr",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Classificador MLP",
        "description": "Treina um modelo classificador Multi-layer Perceptron (MLP) usando scikit-learn.",
        "path": "/samples/mlp-classifier",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Regressor MLP",
        "description": "Treina um modelo regressor Multi-layer Perceptron (MLP) usando scikit-learn.",
        "path": "/samples/mlp-regressor",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Classificador Random Forest",
        "description": "Treina um modelo classificador Random Forest usando scikit-learn.",
        "path": "/samples/random-forest-classifier",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Regressor Random Forest",
        "description": "Treina um modelo regressor Random Forest usando scikit-learn.",
        "path": "/samples/random-forest-regressor",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Análise Descritiva",
        "description": "Gera estatísticas descritivas para um determinado conjunto de dados.",
        "path": "/samples/descriptive-analysis",
        "tags": [
            "DESCRIPTIVE_STATISTICS"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Feature Tools",
        "description": "Usa a biblioteca Feature Tools para Feature Engineering.",
        "path": "/samples/feature-tools",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Seleção Manual de Atributos",
        "description": "Remove as features específicas do conjunto de dados.",
        "path": "/samples/filter-selection",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Agrupamento de Atributos Categóricos",
        "description": "Faz o agrupamento de features categóricas com elevado número de classes.",
        "path": "/samples/grouping-categorical-features",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Imputação de Valores Faltantes",
        "description": "Imputa valores ausentes usando média, mediana ou mais frequente.",
        "path": "/samples/imputer",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Detecção de Anomalias por Isolation Forest",
        "description": "Treina um modelo Isolation Forest para detecção de anomalias usando scikit-learn.",
        "path": "/samples/isolation-forest-clustering",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Clusterização KMeans",
        "description": "Treina um modelo KMeans para clusterização usando scikit-learn.",
        "path": "/samples/kmeans-clustering",
        "tags": [
            "PREDICTOR"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Normalizador de Amostras",
        "description": "Normaliza amostras individualmente para o modelo de norma de unidade usando scikit-learn.",
        "path": "/samples/normalizer",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Seleção de Atributos por Correlação",
        "description": "Remove todas as features de baixa variação e altamente correlacionadas.",
        "path": "/samples/pre-selection",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Seleção de Atributos por Método de Eliminação Recursiva",
        "description": "Realiza a seleção de features baseado no método de eliminação recursiva usando um estimador Random Forest.",
        "path": "/samples/rfe-selector",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Scaler Robusto",
        "description": "Dimensiona features usando estatísticas robustas para outliers.",
        "path": "/samples/robust-scaler",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Simulated Annealing",
        "description": "Aplica a estratégia simulated annealing para Feature Engineering.",
        "path": "/samples/simulated-annealing",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Transformation Graph",
        "description": "Usa uma estratégia de gráfico de transformação para o Feature Engineering.",
        "path": "/samples/transformation-graph",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Seleção de Atributos por Limiar de Variância",
        "description": "Remove todos os atributos de baixa variância.",
        "path": "/samples/variance-threshold",
        "tags": [
            "FEATURE_ENGINEERING"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Face Detection",
        "description": "Utiliza a biblioteca facenet-pytorch, a qual disponibiliza o algorítimo MTCNN.",
        "path": "/samples/cv-mtcnn-face-detection",
        "tags": [
            "COMPUTER_VISION"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "OCR (Optical Character Recognition)",
        "description": "Utiliza a biblioteca Pytesseract para converter textos em imagem para string.",
        "path": "/samples/cv-ocr",
        "tags": [
            "COMPUTER_VISION"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "YOLO (You Only Look Once)",
        "description": "Utiliza uma biblioteca do Yolov4 para detecção e classificação de objetos em imagens.",
        "path": "/samples/cv-yolo",
        "tags": [
            "COMPUTER_VISION"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
	{
        "name": "MarianMT Translator",
        "description": "Utilização do Modelo MarianMT para tradução de diversas linguagens.",
        "path": "/samples/nlp-marianmt-translator",
        "tags": [
            "NLP"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Text Pre-processor",
        "description": "Disponibiliza de diversas técnicas de pré-processamento textual.",
        "path": "/samples/nlp-text-pre-processor",
        "tags": [
            "NLP"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
	{
        "name": "Upload de arquivo",
        "description": "Importa arquivos para utilização em experimentos.",
        "tags": [
            "DATASETS"
        ],
        "commands": ["python3", "-c"],
        "arguments": [
            "import json, os; import platiagro; dataset = json.loads(os.environ[\"PARAMETER_dataset\"]); platiagro.download_dataset(dataset, f\"/tmp/data/{dataset}\")"
        ],
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "Google Drive",
        "description": "Importa arquivos do Google Drive para utilização em experimentos.",
        "tags": [
            "DATASETS"
        ],
        "commands": ["python3", "-c"],
        "arguments": [
            "import json, os; import platiagro; dataset = json.loads(os.environ[\"PARAMETER_dataset\"]); platiagro.download_dataset(dataset, f\"/tmp/data/{dataset}\")"
        ],
        "image": "platiagro/platiagro-experiment-image:0.2.0",
		"artifacts": []
    },
    {
        "name": "GloVe Embeddings Bag (Inglês)",
        "description": "Classifica frases com base em Embeddings GloVe disponibilizados pela Universidade de Stanford",
        "path": "/samples/glove-embeddings-sentence-classification",
        "tags": [
            "NLP"
        ],
        "commands": null,
        "arguments": null,
        "image": "platiagro/platiagro-experiment-image:0.2.0",
        "artifacts": [
			{
				"url": "http://nlp.stanford.edu/data/glove.6B.zip",
				"name": "glove.6B.zip"
			},
			{
				"url": "http://143.107.183.175:22980/download.php?file=embeddings/glove/glove_s50.zip",
				"name": "glove_s50.zip"
			},
			{
				"url": "http://143.107.183.175:22980/download.php?file=embeddings/glove/glove_s100.zip",
				"name": "glove_s100.zip"
			},
			{
				"url": "http://143.107.183.175:22980/download.php?file=embeddings/glove/glove_s300.zip",
				"name": "glove_s300.zip"
			},
			{
				"url": "http://143.107.183.175:22980/download.php?file=embeddings/glove/glove_s600.zip",
				"name": "glove_s600.zip"
			},
			{
				"url": "http://143.107.183.175:22980/download.php?file=embeddings/glove/glove_s1000.zip",
				"name": "glove_s1000.zip"
			}
		]
    }
]
